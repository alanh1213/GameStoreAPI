// <auto-generated />
using System;
using GameStoreAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameStoreAPI.Data.Migrations
{
    [DbContext(typeof(GameStoreContext))]
    [Migration("20240616014742_SeedGenres")]
    partial class SeedGenres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("GameStoreAPI.Entidades.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("FechaLanzamiento")
                        .HasColumnType("TEXT");

                    b.Property<int>("GeneroId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.ToTable("Juegos");
                });

            modelBuilder.Entity("GameStoreAPI.Entidades.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Fighting"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Roleplaying"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Sports"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Racing"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Kids and Family"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Real Strategy Game"
                        });
                });

            modelBuilder.Entity("GameStoreAPI.Entidades.Game", b =>
                {
                    b.HasOne("GameStoreAPI.Entidades.Genre", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");
                });
#pragma warning restore 612, 618
        }
    }
}
